<!-- Copyright (c) 2013 <a href="mailto:daniel.williams@gmail.com">Daniel 
	Williams</a>. All rights reserved. This program, solace.common.parent, and 
	file, pom.xml, and the accompanying materials are made available under the 
	terms of the GNU Public License v3.0 which accompanies this distribution, 
	and is available at http://www.gnu.org/licenses/gpl.html Contributors: <a 
	href="mailto:daniel.williams@gmail.com">Daniel Williams</a> - initial API 
	and implementation -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.solace</groupId>
	<artifactId>solace.common.parent</artifactId>
	<version>1.3.0</version>
	<packaging>pom</packaging>

	<name>solace.common.parent</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>3.1.4.RELEASE</org.springframework.version>
		<jersey.version>1.17.1</jersey.version>
		<ektorp.version>[1.4.0,)</ektorp.version>
		<jackson.version>2.2.2</jackson.version>
		<slf4j.version>1.7.5</slf4j.version>
		<hibernate.version>3.5.4-Final</hibernate.version>
		<hibernate.tools.version>3.2.4.GA</hibernate.tools.version>
	</properties>


	<distributionManagement>
		<repository>
			<id>maven.mobileaccord.com</id>
			<url>http://den-lamp-1:8081/maven/content/repositories/releases</url>
			<layout>default</layout>
			<name>Mobile Accord maven internal repository</name>
		</repository>
	</distributionManagement>


	<developers>
		<developer>
			<id>dan.williams</id>
			<name>Daniel Williams</name>
			<email>dan.williams@gmail.com</email>
			<organization>solace solutions</organization>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
	</developers>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-json</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.14</version>
			</dependency>
			<!-- Core utilities used by other modules. Define this if you use Spring 
				Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Expression Language (depends on spring-core) Define this if you use 
				Spring Expression APIs (org.springframework.expression.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
				this if you use Spring Bean APIs (org.springframework.beans.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
				spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
				spring-beans) This is the central artifact for Spring's Dependency Injection 
				Container and is generally always defined -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Various Application Context utilities, including EhCache, JavaMail, 
				Quartz, and Freemarker integration Define this if you need any of these integrations -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
				spring-aop, spring-context) Define this if you use Spring Transactions or 
				DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
				spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
				and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
				Define this if you need ORM (org.springframework.orm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
				JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
				spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Web application development utilities applicable to both Servlet 
				and Portlet Environments (depends on spring-core, spring-beans, spring-context) 
				Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
				web framework with Spring (org.springframework.web.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
				spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
				Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
				spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
				Container (org.springframework.web.portlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc-portlet</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>


			<!-- Support for testing Spring applications with tools such as JUnit 
				and TestNG This artifact is generally always defined with a 'test' scope 
				for the integration testing framework and unit testing stubs -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.1</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock</artifactId>
				<version>2.5.1</version>
				<optional>false</optional>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit4</artifactId>
				<version>2.5.1</version>
				<optional>false</optional>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-legacy</artifactId>
				<version>2.5.1</version>
				<optional>false</optional>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0-beta-2</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>commons-jexl</groupId>
				<artifactId>commons-jexl</artifactId>
				<version>1.1</version>
			</dependency>

			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>1.6.9</version>
				<scope>compile</scope>
				<optional>false</optional>
			</dependency>

			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.6.9</version>
				<scope>compile</scope>
				<optional>false</optional>
			</dependency>

			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjtools</artifactId>
				<version>1.6.9</version>
			</dependency>

			<dependency>
				<groupId>org.perf4j</groupId>
				<artifactId>perf4j</artifactId>
				<version>0.9.14</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>1.6</version>
			</dependency>

			<dependency>
				<groupId>com.googlecode.xmemcached</groupId>
				<artifactId>xmemcached</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-tools</artifactId>
				<version>${hibernate.tools.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-annotations</artifactId>
				<version>${hibernate.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>0.9.1.2</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.13.0-GA</version>
			</dependency>
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>3.4.0.GA</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>2.2</version>
			</dependency>
			<dependency>
				<groupId>hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>1.8.0.7</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ektorp</groupId>
				<artifactId>org.ektorp</artifactId>
				<version>${ektorp.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ektorp</groupId>
				<artifactId>org.ektorp.spring</artifactId>
				<version>${ektorp.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-parent</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-site-plugin</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

	</dependencies>


	<build>
		<finalName>${project.artifactId}-${project.version}
		</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<ajdtVersion>1.5</ajdtVersion>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>../solace.common</module>
		<module>../solace.common.threading</module>
		<module>../solace.common.caching</module>
		<module>../solace.common.data</module>
	</modules>


</project>
